{"version":3,"sources":["components/Filter.jsx","components/Person.jsx","components/PersonForm.jsx","services/contacts.js","App.js","reportWebVitals.js","index.js"],"names":["Filter","filter","handleFilterChange","type","value","onChange","Person","persons","deleteContact","map","person","personIndex","name","number","id","onClick","PersonForm","addName","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","baseUrl","defaultExport","getAll","axios","create","newObject","post","update","put","destroy","delete","App","useState","setPersons","setNewName","setNewNumber","setFilter","useEffect","contactService","then","res","data","catch","err","console","log","handleFilter","trim","toLowerCase","indexOf","contactToShow","length","event","target","preventDefault","some","alert","nameObject","response","concat","Number","message","window","confirm","deletedContact","p","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MAEaA,EAAS,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,OAAQC,EAAyB,EAAzBA,mBAC/B,OACE,qDACqB,IACnB,uBAAOC,KAAK,OAAOC,MAAOH,EAAQI,SAAUH,QCJnC,SAASI,EAAT,GAA6C,IAA3BC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,cACxC,OACE,8BACGD,EAAQE,KAAI,SAACC,EAAQC,GAAT,OACX,+BACGD,EAAOE,KADV,IACiBF,EAAOG,OACtB,wBACED,KAAMF,EAAOE,KACbE,GAAIJ,EAAOI,GACXC,QAAS,kBAAMP,EAAcE,IAH/B,sBAFOA,EAAOE,WCJjB,IAAMI,EAAa,SAAC,GAMpB,IALLC,EAKI,EALJA,QACAC,EAII,EAJJA,QACAC,EAGI,EAHJA,iBACAC,EAEI,EAFJA,UACAC,EACI,EADJA,mBAEA,OACE,8BACE,uBAAMC,SAAUL,EAAhB,UACE,wCACQ,IACN,uBAAOd,KAAK,OAAOC,MAAOc,EAASb,SAAUc,OAE/C,2CACU,uBAAOf,MAAOgB,EAAWf,SAAUgB,OAE7C,8BACE,wBAAQlB,KAAK,SAAb,yBCnBJoB,EAAU,oCAyBDC,EAPO,CACpBC,OAjBa,WACb,OAAOC,IAAMH,IAiBbI,OAda,SAACC,GACd,OAAOF,IAAMG,KAAKN,EAASK,IAc3BE,OAXa,SAAChB,EAAIc,GAClB,OAAOF,IAAMK,IAAN,UAAaR,EAAb,YAAwBT,GAAMc,IAWrCI,QARc,SAAClB,GACf,OAAOY,IAAMO,OAAN,UAAgBV,EAAhB,YAA2BT,MCuFrBoB,EAhGH,WAAO,IAAD,EACcC,mBAAS,IADvB,mBACT5B,EADS,KACA6B,EADA,OAEcD,mBAAS,IAFvB,mBAETjB,EAFS,KAEAmB,EAFA,OAGkBF,mBAAS,IAH3B,mBAGTf,EAHS,KAGEkB,EAHF,OAIYH,mBAAS,IAJrB,mBAITlC,EAJS,KAIDsC,EAJC,KAMhBC,qBAAU,WACRC,EACGhB,SACAiB,MAAK,SAACC,GAAD,OAASP,EAAWO,EAAIC,SAC7BC,OAAM,SAACC,GACNC,QAAQC,IAAIF,QAEf,IAEH,IAwDMG,EAAe1C,EAAQN,QAC3B,SAACS,GAAD,OACEA,EAAOE,KAAKsC,OAAOC,cAAcC,QAAQnD,EAAOiD,OAAOC,gBAAkB,KAGvEE,EAAgBJ,EAAaK,OAASL,EAAe1C,EAE3D,OACE,gCACE,2CACA,cAAC,EAAD,CAAQN,OAAQA,EAAQC,mBAdD,SAACqD,GAC1BhB,EAAUgB,EAAMC,OAAOpD,UAcrB,mDACA,cAAC,EAAD,CACEa,QArEU,SAACsC,GAEf,GADAA,EAAME,iBACDvC,EAAQgC,OAIb,GAAK9B,EAAU8B,OAAf,CAIA,GAAI3C,EAAQmD,MAAK,SAACH,GAAD,OAAWA,EAAM3C,OAASM,KAIzC,OAHAyC,MAAM,GAAD,OAAIzC,EAAJ,6CACLmB,EAAW,UACXC,EAAa,IAGf,IAAMsB,EAAa,CACjBhD,KAAMM,EACNL,OAAQO,GAGVM,IACGG,KAAK,oCAAqC+B,GAC1ClB,MAAK,SAACmB,GACLzB,EAAW7B,EAAQuD,OAAOF,IAC1BvB,EAAW,KACXC,EAAa,aAnBfqB,MAAM,4BAJNA,MAAM,sBAmEJzC,QAASA,EACTE,UAAWA,EACXD,iBA7BgB,SAACoC,GACrBR,QAAQC,IAAIO,EAAMC,OAAOpD,OACzBiC,EAAWkB,EAAMC,OAAOpD,QA4BpBiB,mBA1BkB,SAACkC,GACvBR,QAAQC,IAAIO,GACZR,QAAQC,IAAIO,EAAMC,OAAOpD,OACzBkC,EAAaiB,EAAMC,OAAOpD,UAyBxB,yCACA,cAACE,EAAD,CAAQC,QAAS8C,EAAe7C,cA9Cd,SAACE,GACrB,IAAMI,EAAKiD,OAAOrD,EAAOI,IACnBkD,EAAO,uCAAmCtD,EAAOE,OAEvB,IAA5BqD,OAAOC,QAAQF,IACjBvB,EACGT,QAAQlB,GACR4B,MAAK,SAACyB,GAAD,OACJ/B,EAAW7B,EAAQN,QAAO,SAACmE,GAAD,OAAOA,EAAEtD,KAAOA,gBChDrCuD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB7B,MAAK,YAAkD,IAA/C8B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.02138daa.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const Filter = ({ filter, handleFilterChange }) => {\n  return (\n    <div>\n      Filter shown with:{\" \"}\n      <input type=\"text\" value={filter} onChange={handleFilterChange} />\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport default function Person({ persons, deleteContact }) {\n  return (\n    <div>\n      {persons.map((person, personIndex) => (\n        <li key={person.name}>\n          {person.name}:{person.number}\n          <button\n            name={person.name}\n            id={person.id}\n            onClick={() => deleteContact(person)}\n          >\n            delete\n          </button>\n        </li>\n      ))}\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport const PersonForm = ({\n  addName,\n  newName,\n  handleNameChange,\n  newNumber,\n  handleNumberChange,\n}) => {\n  return (\n    <div>\n      <form onSubmit={addName}>\n        <div>\n          name:{\" \"}\n          <input type=\"text\" value={newName} onChange={handleNameChange} />\n        </div>\n        <div>\n          number: <input value={newNumber} onChange={handleNumberChange} />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n    </div>\n  );\n};\n","import axios from \"axios\";\nconst baseUrl = \"http://localhost:3003/api/persons\";\n\nconst getAll = () => {\n  return axios(baseUrl);\n};\n\nconst create = (newObject) => {\n  return axios.post(baseUrl, newObject);\n};\n\nconst update = (id, newObject) => {\n  return axios.put(`${baseUrl}/${id}`, newObject);\n};\n\nconst destroy = (id) => {\n  return axios.delete(`${baseUrl}/${id}`);\n};\n\nconst defaultExport = {\n  getAll: getAll,\n  create: create,\n  update: update,\n  destroy: destroy,\n};\n\nexport default defaultExport;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Filter } from \"./components/Filter\";\nimport Person from \"./components/Person\";\nimport { PersonForm } from \"./components/PersonForm\";\nimport contactService from \"./services/contacts\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [filter, setFilter] = useState(\"\");\n\n  useEffect(() => {\n    contactService\n      .getAll()\n      .then((res) => setPersons(res.data))\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  const addName = (event) => {\n    event.preventDefault();\n    if (!newName.trim()) {\n      alert(\"Please add a name\");\n      return;\n    }\n    if (!newNumber.trim()) {\n      alert(\"Please add a number\");\n      return;\n    }\n    if (persons.some((event) => event.name === newName)) {\n      alert(`${newName} has already been added to the phonebook`);\n      setNewName(\" \");\n      setNewNumber(\"\");\n      return;\n    }\n    const nameObject = {\n      name: newName,\n      number: newNumber,\n    };\n\n    axios\n      .post(\"http://localhost:3003/api/persons\", nameObject)\n      .then((response) => {\n        setPersons(persons.concat(nameObject));\n        setNewName(\" \");\n        setNewNumber(\" \");\n      });\n  };\n\n  const deleteContact = (person) => {\n    const id = Number(person.id);\n    const message = `Do you really want to delete ${person.name}`;\n\n    if (window.confirm(message) === true) {\n      contactService\n        .destroy(id)\n        .then((deletedContact) =>\n          setPersons(persons.filter((p) => p.id !== id))\n        );\n    }\n  };\n\n  const handleNewName = (event) => {\n    console.log(event.target.value);\n    setNewName(event.target.value);\n  };\n  const handleNewNumber = (event) => {\n    console.log(event);\n    console.log(event.target.value);\n    setNewNumber(event.target.value);\n  };\n  const handleFilterChange = (event) => {\n    setFilter(event.target.value);\n  };\n\n  const handleFilter = persons.filter(\n    (person) =>\n      person.name.trim().toLowerCase().indexOf(filter.trim().toLowerCase()) > -1\n  );\n\n  const contactToShow = handleFilter.length ? handleFilter : persons;\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Filter filter={filter} handleFilterChange={handleFilterChange} />\n      <h3>Add a new contact</h3>\n      <PersonForm\n        addName={addName}\n        newName={newName}\n        newNumber={newNumber}\n        handleNameChange={handleNewName}\n        handleNumberChange={handleNewNumber}\n      />\n      <h2>Numbers</h2>\n      <Person persons={contactToShow} deleteContact={deleteContact} />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}